#!/usr/bin/env php
<?php
require __DIR__ . '/../vendor/autoload.php';


$dotenv = new \Symfony\Component\Dotenv\Dotenv();
$dotenv->load(__DIR__.'/../.env');

if (!empty($_ENV['APP_ENV']) && strtolower($_ENV['APP_ENV']) === 'prod') {
    error_reporting(E_ALL ^ E_DEPRECATED);
}

$app = new Symfony\Component\Console\Application(
        'Time-Tracking',
        !empty($_ENV['APP_VERSION']) ? $_ENV['APP_VERSION'] : 'test'
);
$commandsLoader = new \Symfony\Component\Console\CommandLoader\FactoryCommandLoader([
    'timer:list' => function () { return new Mediashare\TimeTracking\Command\ListCommand(); },
    'timer:start' => function () { return new Mediashare\TimeTracking\Command\StartCommand(); },
    'timer:stop' => function () { return new Mediashare\TimeTracking\Command\StopCommand(); },
    'timer:status' => function () { return new Mediashare\TimeTracking\Command\StatusCommand(); },
    'timer:archive' => function () { return new Mediashare\TimeTracking\Command\ArchiveCommand(); },
    'timer:remove' => function () { return new Mediashare\TimeTracking\Command\RemoveCommand(); },
    'timer:commit' => function () { return new Mediashare\TimeTracking\Command\CommitCommand();},
    'timer:commit:edit' => function () { return new Mediashare\TimeTracking\Command\CommitEditCommand();},
    'timer:commit:remove' => function () { return new Mediashare\TimeTracking\Command\CommitRemoveCommand(); },
    'timer:gitignore' => function () { return new Mediashare\TimeTracking\Command\GitignoreCommand(); },
    'timer:upgrade' => function () { return new Mediashare\TimeTracking\Command\UpgradeCommand(); },
]);
$app->setCommandLoader($commandsLoader);
$app->run();